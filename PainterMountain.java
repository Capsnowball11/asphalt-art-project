import org.code.neighborhood.*;
public class PainterMountain extends PainterPlus {
  
  public void paintMountainOutline(String color){
    turnRight(); 
    move();
    move();
    move();
    move();
    move();
    move();
    turnLeft();
    move();
    paint(color);
    move();
    turnLeft();
    move();
    turnRight();
    paint(color);
    move();
    turnLeft();
    move();
    turnRight();
    paint(color);
    move();
    turnLeft();
    move();
    turnRight();
    paint(color);
    move();
    turnRight();
    move();
    turnLeft();
    paint(color);
    move();
    turnRight();
    move();
    turnLeft();
    paint(color);
    move();
    turnRight();
    move();
    turnLeft();
    paint(color);
    move();
    turnLeft();
    move();
    turnRight();
    paint(color);
    move();
    turnLeft();
    move();
    turnRight();
    paint(color);
    move();
    turnLeft();
    move();
    turnRight();
    paint(color);
    move();
    turnLeft();
    move();
    turnRight();
  turnRight();
  while (canMove()){
    move();
  }
  }    
  
  public void paintMountain(String color) {
    turnLeft();
    turnLeft();
    move();
    turnLeft();
    move();
    paintMove(color);
    paintMove(color);
    turnRight();
    move();
    turnRight();
    paintMove(color);
    paintMove(color);
    paintMove(color);
    turnLeft();
    move();
    turnLeft();
    move();
    paintMove(color);
    paintMove(color);
    paintMove(color);
    paintMove(color);
    move();
    move();
    move();
    move();
    paintMove(color);
    paint(color);
    turnLeft();
    move();
    paint(color);
    turnLeft();
    turnLeft();
    move();
    move();
    turnRight();
    paintMove(color);
    paintMove(color);
    paintMove(color);
    paintMove(color);
    paintMove(color);
    paintMove(color);
    paintMove(color);
    paintMove(color);
    paintMove(color);
    paintMove(color);
    turnLeft();
    move();
    turnLeft();
    move();
    paintMove(color);
    paintMove(color);
    paintMove(color);
    move();
    paintMove(color);
    paintMove(color);
    paintMove(color);
    paintMove(color);
    paintMove(color);
    turnRight();
    move();
    turnRight();
    move();
    move();
    paintMove(color);
    paintMove(color);
    paintMove(color);
    move();
    move();
    move();
    paintMove(color);
    paintMove(color);
    turnLeft();
    move();
    turnLeft();
    move();
    paintMove(color);
    move();
    move();
    move();
    move();
    move();
    paintMove(color);
    while (canMove()) {
      move();
    }
    turnLeft();
    while (canMove()) {
      move();
    }
    turnRight();
  }
}